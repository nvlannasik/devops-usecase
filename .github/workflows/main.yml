name: CI/CD for Mono Repo

on:
  push:
    tags:
      - "release-*"

jobs:
  code-static-analysis-inspection-example-for-order-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "19.9"

      - name: Install Dependencies
        run: |
          cd ./App/order-nodejs
          npm install

      - name: Run Static Analysis for NodeJS Apps
        run: |
          cd ./App/order-nodejs
          npm run lint

  unit-testing-example-for-order-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "19.9"

      - name: Install Dependencies
        run: |
          cd ./App/order-nodejs
          npm install

      - name: Run Unit Testing
        run: |
          cd ./App/order-nodejs
          npm run test

  integration-test-example-for-order-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "19.9"

      - name: Install Dependencies
        run: |
          cd ./App/order-nodejs
          npm install

      - name: Run Integration Testing
        run: |
          cd ./App/order-nodejs
          npm run integration

  end-to-end-test-example-for-order-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "19.9"

      - name: Install Dependencies
        run: |
          cd ./App/order-nodejs
          npm install

      - name: Run End to End Testing
        run: |
          cd ./App/order-nodejs
          npm run e2e

  build-push-and-update-manifest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push Order Service
        uses: docker/build-push-action@v5
        with:
          context: ./App/order-nodejs
          file: ./App/order-nodejs/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/order-services-nodejs:${{ github.ref_name }}
          push: true
          platforms: linux/amd64,linux/arm64

      - name: Update Order Services Deployment manifest
        run: |
          NEW_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/order-services-nodejs:${{ github.ref_name }}"
          sed -i "s|image: .*|image: $NEW_IMAGE|" ./manifest/apps/order/deployment.yml
          git config --global user.email "annasikn@yahoo.com"
          git config --global user.name "nvlannasik"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/nvlannasik/devops-usecase.git
          git add ./manifest/apps/order/deployment.yml
          git commit -m "Update Order Services Deployment manifest"
          git push origin HEAD:master

      - name: Build & Push Product Service
        uses: docker/build-push-action@v5
        with:
          context: ./App/product-nodejs
          file: ./App/product-nodejs/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/product-services-nodejs:${{ github.ref_name }}
          push: true
          platforms: linux/amd64,linux/arm64

      - name: Update Product Services Deployment manifest
        run: |
          NEW_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/product-services-nodejs:${{ github.ref_name }}"
          sed -i "s|image: .*|image: $NEW_IMAGE|" ./manifest/apps/product/deployment.yml
          git config --global user.email "annasikn@yahoo.com"
          git config --global user.name "nvlannasik"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/nvlannasik/devops-usecase.git
          git add ./manifest/apps/product/deployment.yml
          git commit -m "Update Product Services Deployment manifest"
          git push origin HEAD:master

      - name: Build & Push User Service
        uses: docker/build-push-action@v5
        with:
          context: ./App/user-go
          file: ./App/user-go/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/user-services-go:${{ github.ref_name }}
          push: true
          platforms: linux/amd64,linux/arm64

      - name: Update User Services Deployment manifest
        run: |
          NEW_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/user-services-go:${{ github.ref_name }}"
          sed -i "s|image: .*|image: $NEW_IMAGE|" ./manifest/apps/user/deployment.yml
          git config --global user.email "annasikn@yahoo.com"
          git config --global user.name "nvlannasik"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/nvlannasik/devops-usecase.git
          git add ./manifest/apps/user/deployment.yml
          git commit -m "Update User Services Deployment manifest"
          git push origin HEAD:master

  sync-argocd:
    needs: build-push-and-update-manifest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Sync All ArgoCD Apps
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
          APPS=$(argocd app list -o name)
          for APP in $APPS; do
            argocd app sync $APP
          done
