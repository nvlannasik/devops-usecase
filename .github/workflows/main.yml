name: CI/CD for Mono Repo

on:
  push:
    tags:
      - "release-*"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout Code
      - name: Checkout code
        uses: actions/checkout@v2

      # Layanan Order
      - name: Build and Push Order Service
        id: order-service
        uses: docker/build-push-action@v2
        with:
          context: ./App/order-nodejs
          file: ./App/order-nodejs/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/order-services-nodejs:${{ github.ref_name }}
          push: true

      - name: Update Order Service Deployment Manifest Locally
        run: |
          NEW_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/order-services-nodejs:${{ github.ref_name }}"
          sed -i "s|image: .*|image: $NEW_IMAGE|" ./Manifest/apps/order/deployment.yml

      # Layanan Product
      - name: Build and Push Product Service
        id: product-service
        uses: docker/build-push-action@v2
        with:
          context: ./App/product-nodejs
          file: ./App/product-services-nodejs/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/product-services-nodejs:${{ github.ref_name }}
          push: true

      - name: Update Product Service Deployment Manifest Locally
        run: |
          NEW_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/product-services-nodejs:${{ github.ref_name }}"
          sed -i "s|image: .*|image: $NEW_IMAGE|" ./Manifest/apps/product/deployment.yml

      # Layanan User
      - name: Build and Push User Service
        id: user-service
        uses: docker/build-push-action@v2
        with:
          context: ./App/user-go
          file: ./App/user-services-go/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/user-services-go:${{ github.ref_name }}
          push: true

      - name: Update User Service Deployment Manifest Locally
        run: |
          NEW_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/user-services-go:${{ github.ref_name }}"
          sed -i "s|image: .*|image: $NEW_IMAGE|" ./Manifest/apps/user/deployment.yml

      # Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # # Trigger ArgoCD untuk setiap layanan
      # - name: Trigger ArgoCD Sync
      #   run: |
      #     ARGOCD_SERVER=argocd-server-url
      #     APPS=("order" "product" "user")

      #     for APP in ${APPS[@]}; do
      #       # Sesuaikan dengan perintah atau API call yang Anda gunakan untuk mentrigger ArgoCD
      #       echo "Triggering ArgoCD sync for $APP"
      #     done
